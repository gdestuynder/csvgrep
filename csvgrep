#!/bin/bash

# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is the ldap-query for SSH keys.
#
# The Initial Developer of the Original Code is
# Mozilla Corporation
# Portions created by the Initial Developer are Copyright (C) 2013
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
# gdestuynder@mozilla.com
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.

# Tiny handy script to grep csv files by field, no matter where the field is located
# Original made for ArcSight csv exports
# You probably want to run this as ./csvgrep <file> <columns> | column -t
# Since column doesn't implement proper signaling I didn't include it by default, since | head'ing the script would otherwise take forever on big files

get_fields()
{
	IFS=""
	head -n1 ${FILE} |awk -F ',' '{for (i=1;i<NF;i++) print i" "$i}'
	unset IFS
}

get_field_nr()
{
	IFS=""
	echo $1 | grep $2 | cut -d " " -f 1
	unset IFS
}

main()
{
	local fields fgrep

	FILE=$1
	shift

	[[ $1 == "list" ]] && {
			get_fields
			exit 0
	}
	
	fields=$(get_fields)

# Get all field numbers to grep for
	while [[ $1 != "" ]]; do
		fgrep="$fgrep \$$(get_field_nr "$fields" $1)\" \""
		shift
	done

	awk -F ',' "{print ${fgrep}}"< ${FILE} ${quiet} | tr -d '"' 
}

usage()
{
	[[ $# -lt 2 ]] && {
		echo -e "USAGE: $0 <filename.csv> list\t\t\t lists all possible fields for this file"
		echo -e "       $0 <filename.csv> [field] [field] [...]\t output all listed fields"
		echo -e "\nExample:"
		echo "\$ $0 filename.csv sourceAddress sourcePort | column -t"
		echo "sourceAddress		sourcePort"
		echo "127.0.0.1			25"
		echo "10.0.0.2			143"
		exit 1
	}
}

usage $*
main $*
